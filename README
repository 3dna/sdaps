SDAPS
=====

This Program can be used to carry out paper based surveys.

The questionnaire is designed using either OpenOffice/LibreOffice and then
exported to PDF. SDAPS then uses both the ODT document and the PDF file
to figure out what questions are asked, and where checkboxes and freeform
fields are placed.
Another great way to use SDAPS is together with its LaTeX class. It allows
you to create questionnaires very easily and is tightly integrated into the
SDAPS main program.

After this, the program can create an arbitrary number of (unique)
questionnaires that can be printed and handed out. After being filled out, you
just scan them in, let sdaps run over them, and let it create a report with
the results.


Requirements
============

 * Python
 * distutils and distutils-extra
 * GTK+ and gobject introspection for the front end that can be used
   to control/correct the results
 * reportlab
 * pdftk or pyPdf (pdftk is much faster if you need questionnaire ids)
 * Python Imaging Library (PIL)
 * python-cairo (including development files)
 * libtiff (including development files)
 * python development files
 * pkg-config
 * python-zbar for "code128" style.

Installation
============

You can install sdaps using "./setup.py install". The C extension will
be compiled automatically, but of course you have to have all the
dependencies installed for this to work.

Standalone execution
====================

As an alternative to installing sdaps it is also supported to run it without
installation. To do this run "./setup.py build" to build the binary modules
and translation. After this execute sdaps using the provided "sdaps.py"
script in the toplevel directory.

Using SDAPS
===========

Please run sdaps without arguments after installing it for a list of commands.
Also check the website http://sdaps.sipsolutions.net for some examples.

Quality of the recognition
==========================

NOTE: This is not up to date anymore. There have been changes to the
algorithm that make SDAPS more robust. The parameters currently used are
only a very rough estimation. They likely can be tweaked to yield better
results.

The quality of the recognition of SDAPS is quite good. The algorithm just
tests for how much black is in the area of the box. This works pretty good,
with only a few mistakes in corner cases.
That said, this is based on results that the authors of this software had.
To achive these, we had our scanner set configured in a way that meant that
pretty much all pens or pencils turned out nice black. If you want to use
this software it is likely that you need to have a look at your scanners
options to find usable ones, and to also adjust the magic values that SDAPS
uses.
For this a tool called "boxgallery" is provided, which will output a sorted
list of all checkboxes. With this the threshold that is needed can be
determined.

See also TROUBLESHOOTING.

Printing
========

See above. The algorithm is quite susceptable to changes in the black level
(or line width). For this reason, it is currently highly recommended to use
only one printer (and scanner).
